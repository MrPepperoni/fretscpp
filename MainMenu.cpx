interface

uses includes, globals, sprites, scene, Menu;

class tMainMenu:public sceneBase
{
public:
	tMainMenu() { scenes.add(this,SCN_MAINMENU); }
	void init();
	void render();
	void handleevent(SDL_Event &a);
	tMenu mm;
} MainMenu;

implementation

void tMainMenu::init()
{
	mm.add("Start game");
	mm.add("Multiplayer");
	mm.add("Settings");
	mm.add("Quit");
	mm.posx=globals.scr_width*0.2;
	mm.posy=globals.scr_height*0.4;
	mm.scale=globals.scr_height*0.08;
	mm.init();
}

void tMainMenu::render()
{
	GLfloat w=globals.scr_width;
	GLfloat h=globals.scr_height;
	GLfloat t=scn.timesc*0.33;
	GLfloat fade2=scn.fade*2;
	if (fade2>1) fade2=1;
	GLfloat v=fade2*fade2; // 1-v in original
	GLfloat logoscale=1+0.025*sin(t*17)*(1-v)-v*v*v;
	GLfloat ms=1000.0/w;
	
	glClearColor( 0.3f, 0.0f, 0.0f, 0.0f );
	glClear( GL_COLOR_BUFFER_BIT );
	
	glLoadIdentity();
	glTranslatef(0.5*w+v*2*w+cos(t/2)*w*0.2, 0.5*h+sin(t)*w*0.2, 0);
	glRotatef(t*53.3f+30,0.0,0.0,1.0);
	glScalef(2+sin(t/8), 2+sin(t/8),1.0);
	glScalef(ms,ms,1.0);
	spc.back.draw();
	
	if (logoscale>0.01)
	{
		glLoadIdentity();
		glTranslatef(0.5*w,0.2*h,0);
		glScalef(1+0.025*sin(t*16), logoscale,1.0);
		glScalef(ms,ms,1.0);
		spc.logo.draw();
	}
	glLoadIdentity();
	glTranslatef(0.75*w+v*v*w, 0.65*h, 0);
	glScalef(0.9,0.9,1.0);
	glScalef(ms,ms,1.0);
	spc.guyk.draw();
	
	mm.faderot=scn.fade*2-1;
	if (mm.faderot<0) mm.faderot=0;
	mm.render();
}

void tMainMenu::handleevent(SDL_Event &event)
{
	switch (event.type)
	{
	case SDL_KEYDOWN:
		switch (event.key.keysym.sym) 
		{
			case SDLK_ESCAPE:
			case SDLK_q:
					gameover = 1;
					break;
			case SDLK_RETURN:
					scn.nextscene=2;
					break;
		}
		break;
	}		
}
