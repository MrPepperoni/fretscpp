interface

implementation

uses scnGuitar,font;

void tSceneGuitar::renderMultiplierVal()
{
	tPlayer &pp=player[cplayer];
	int mult=pp.streak/10*2;
	int mr=pp.streak%10;
	if (pp.streak>=40) { mult=6; mr=10; }
	h=scr_height;
	w=scr_width;
	glPushMatrix();
	glTranslatef(w*(1+cplayer*12)/14.0,h*1/3,0);
	glScalef(w/14,-w/7,0);
	//deffont.displayString(".",0,1,1,0);
	spc.guitar[mult].bind();
	glColor4f(1,1,1,1);
	glBegin(GL_TRIANGLE_STRIP);
	glTexCoord2f(0.0, 0.0); glVertex3f(-1, -1, 0);
	glTexCoord2f(1.0, 0.0); glVertex3f( 1, -1, 0);
	glTexCoord2f(0.0, mr/10.0); glVertex3f(-1, mr/5.0-1, 0);
	glTexCoord2f(1.0, mr/10.0); glVertex3f( 1, mr/5.0-1, 0);
	glEnd();
	spc.guitar[mult+1].bind();
	glBegin(GL_TRIANGLE_STRIP);
	glTexCoord2f(0.0, mr/10.0); glVertex3f(-1, mr/5.0-1, 0);
	glTexCoord2f(1.0, mr/10.0); glVertex3f( 1, mr/5.0-1, 0);
	glTexCoord2f(0.0, 1.0); glVertex3f(-1, 1, 0);
	glTexCoord2f(1.0, 1.0); glVertex3f( 1, 1, 0);
	glEnd();
	spc.unbind();
	glPopMatrix();
}

void tSceneGuitar::renderStats()
{
	tPlayer &pp=player[cplayer];
	char a[256];
	pp.passtime();
	glLoadIdentity();
	glColor4f(1.0,1.0,1.0,1.0);
	int align=0;
	int x=20;
	if (cplayer==1) 
	{
		align=TFont::ALIGN_RIGHT;
		x=w-20;
	}
	sprintf(a,"streak: %d",pp.streak);
	deffont.displayString(a,x,h/2+40,20,align);
	sprintf(a,"score: %d",pp.score);
	deffont.displayString(a,x,h/2+60,20,align);
	if (statsmode==1)
	{
		sprintf(a,"playing: %d",playing.playpos);
		deffont.displayString(a,20,20,20,0);
		sprintf(a,"decode: %d-%d-%d",playing.decodepos[0],playing.decodepos[1],playing.decodepos[2]);
		deffont.displayString(a,20,40,20,0);
		sprintf(a,"stop: %d-%d-%d",playing.stopsat[0],playing.stopsat[1],playing.stopsat[2]);
		deffont.displayString(a,20,60,20,0);
	}
}
