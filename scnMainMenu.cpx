/*******************************************************************
(C) 2010 by Radu Stefan
radu124@gmail.com

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; version 2 of the License.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
*******************************************************************/  

interface

uses includes, globals, sprites, scene, scnMenu;

class tScnMenuMain:public tScnMenuBase
{
public:
	tScnMenuMain() { scenes.add(this,SCN_MAINMENU); }
	GLfloat fadespeed() { return 1; }
	void init();
	void render();
	void itemClicked(int i);
} MainMenu;

implementation

void tScnMenuMain::init()
{
	additem("Start game");
	additem("Multiplayer");
	additem("Settings");
	additem("Define controls");
	additem("Quit");
	posx=-24;
	posy=-6;
	scale=4.8;
	tScnMenuBase::init();
}

void tScnMenuMain::itemClicked(int i)
{
	switch (i)
	{
	case -1:
	case 4:
		gameover = 1;
		break;
	case 0:
		numplayers=1;
		fadetoscene(2);
		break;
	case 1:
		numplayers=2;
		fadetoscene(2);
		break;
	case 2:
		pushscene(SCN_SETTINGS);
		break;
	case 3:
		fadetoscene(SCN_KEYDEF);
		break;
	}
}

void tScnMenuMain::render()
{
	paintrotback();
	GLfloat t=scn.timesc*0.33;
	GLfloat fade2=scn.fade*2;
	if (fade2>1) fade2=1;
	GLfloat v=fade2*fade2; // 1-v in original
	GLfloat logoscale=1+0.025*sin(t*17)*(1-v)-v*v*v;
	
	if (logoscale>0.01)
	{
		glLoadIdentity();
		glTranslatef(0,-18,0);
		glScalef(1+0.025*sin(t*16), logoscale,1.0);
		glScalef(1.25,1.25,1.0);
		spc.logo.draw();
	}
	glLoadIdentity();
	glTranslatef(20+v*v*80, 8.5, 0);
	glScalef(0.9,0.9,1.0);
	glScalef(1.25,1.25,1.0);
	spc.guyk.draw();
	glLoadIdentity();
	glColor4f(0.8f,0.3f,0.0f,1-scn.fade);
	deffont.displayString("Note: this is not the original Frets-on-Fire game",39,29,2,TFont::ALIGN_RIGHT);
	rendertext();
}

