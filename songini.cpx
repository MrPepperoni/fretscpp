/*******************************************************************
(C) 2011 by Radu Stefan
radu124@gmail.com

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; version 2 of the License.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
*******************************************************************/  

interface

uses includes;

#define SONGINI_LIST \
SIPD(string,artist) \
SIPD(string,icon) \
SIPD(string,name) \
SIPD(string,tags) \
SIPD(int,diff_guitar) \
SIPD(int,diff_drums) \
SIPD(int,diff_bass) \
SIPD(int,diff_band) \
SIPD(string,unlock_id) \
SIPD(string,unlock_require) \
SIPD(string,unlock_text) \
SIPD(string,casettecolor) \
SIPD(int,count) \
SIPD(string,scores) \
SIPD(string,scores_ext) \
SIPD(int,tutorial) \
SIPD(int,delay) \
SIPD(string,frets) \
SIPD(string,version) \
SIPD(int,year) \
SIPD(string,genre) \
SIPD(string,loading_phrase) \
SIPD(int,hopo_freq) \
SIPD(string,video) \
SIPD(int,video_start_time) \
SIPD(int,video_end_time) \
SIPD(int,preview_start_time) \
SIPD(string,cover) \
SIPD(string,background) \


struct tSongini
{
#define SIPD(a,b) a b;
	SONGINI_LIST
#undef SIPD
	
	int load(string filename);
};

implementation

uses configuration;

#define tsiMAstring(c) if (tsimatch(l,""#c)) {c=l; DBG(SONGINI,"Read: "#c"=%s\n", c); continue; } else do {;} while (0);
#define tsiMAint(c) if (tsimatch(l,""#c)) {c=atoi(l); DBG(SONGINI,"Read int:"#c"=%d\n", c); continue; } else do {;} while(0);

int tSongini::load(string filename)
{
	char buf[16384];
	FILE *f=fopen(filename.c_str(),"r");
	if (!f) return 0;
	while (!feof(f)) 
	{
		char *l=buf;
		if (NULL==fgets(buf,16383,f)) break;
		buf[16384]=0;
		while (*l==' ' || *l=='t')  l++;
		#define SIPD(a,b) tsiMA##a(b);
		SONGINI_LIST
		#undef SIPD
	}
	fclose(f);
	return 1;
}
