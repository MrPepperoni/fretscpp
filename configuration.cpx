interface

uses includes,player;

string configFile;
string homeconfdir;
string datadir;
// just decided namespaces are evil
// namespaces allow you to have two things with the same name
// why would you want that, just to create confusion?
// namespace config

vvint keydefs;
vstring keyconfname;

struct tNeckpos
{
	GLfloat xdisp,ydisp;
	GLfloat scale,stretch;
	GLfloat skew;
	int statpos;
//	tNeckpos():xdisp(0),ydisp(0),scale(1),stretch(1),skew(0),statpos(0) {;}
};
	
// bit mask describing the last selected input devices
//we don't expect more than 8 players
long keydefselector[8];
void init_config();

int conf_stretch=0;
const int NECKPOS_COUNT=MAX_PLAYERS*(MAX_PLAYERS+1)/2;
tNeckpos neckpos[NECKPOS_COUNT];
GLfloat neckpos_extend;
GLfloat tolerance_early=100;
GLfloat tolerance_late=100;
GLfloat boardlen=4;
GLfloat boardline=3;
GLfloat necktop=2;

tNeckpos defneckpos[10]={
{0.000000,0.000000,1.000000,1.000000,0.000000,0},
{-3.250000,0.000000,1.000000,0.700000,-0.220000,0},
{3.250000,0.000000,1.000000,0.700000,0.220000,1},
{-3.500000,-0.250000,0.800000,0.600000,-0.150000,0},
{0.000000,0.500000,0.900000,0.600000,0.000000,1},
{3.500000,-0.250000,0.800000,0.600000,0.150000,1},
{-3.000000,-1.000000,0.600000,1.000000,0.000000,0},
{-1.750000,4.000000,1.300000,0.500000,0.000000,0},
{3.000000,4.000000,1.300000,0.500000,0.000000,1},
{3.500000,-1.000000,0.600000,1.000000,0.000000,1}
};

int enablehopos;

implementation

int defkeys[]={ SDLK_F1, SDLK_F2, SDLK_F3, SDLK_F4, SDLK_F5, SDLK_RETURN, SDLK_RSHIFT, SDLK_TAB, 'p'};
int defkey2[]={ '1','2','3','4','5','k','m','l','p' };

int read_config()
{
	char a[256];
	int i, j, v, numkeys;
	FILE *fc=fopen(configFile.c_str(),"r");
	if (!fc) return 0;
	fscanf(fc,"%s\n",a);
	//currently very dumb
	//MESSAGE("%s" &a);
	fscanf(fc,"%d", &numkeys);
	keydefs.resize(0);
	keyconfname.resize(0);
	keydefs.resize(numkeys);
	for (i=0; i<numkeys; i++)
	{
		for (j=0; j<8; j++)
		{
			fscanf(fc, "%d", &v); 
			keydefs[i].push_back(v);
		}
		fscanf(fc,"%s",a);
		if (a[0]>='0' && a[0]<='9')
		{
			// for the 5 pepole who already tried the first version
			// of the game and have the settings file
			sscanf(a,"%d",&v);
			keydefs[i].push_back(v);
			//MESSAGE("new config\n");
			fscanf(fc,"%s",a);
		} else keydefs[i].push_back(0);
		fscanf(fc,"\n");
		keyconfname.push_back(a);
	}
	for (i=0; i<8; i++) fscanf(fc,"%ld",keydefselector+i);
	fscanf(fc,"\n");
	fscanf(fc,"%s\n",a);
	fscanf(fc,"%d", &i);
	if (i==10)
	{
		for (i=0; i<10; i++)
		{
			fscanf(fc,"%f %f %f %f %f %d\n",
				&neckpos[i].xdisp,
				&neckpos[i].ydisp,
				&neckpos[i].scale,
				&neckpos[i].stretch,
				&neckpos[i].skew,
				&neckpos[i].statpos);
		}
		if (neckpos[i].scale<0.5 || neckpos[i].scale>4) neckpos[i]=defneckpos[i];
	}
	fclose(fc);
	if (numkeys<2) return 0;
	return 1;
}

void write_config()
{
	int i,j;
	FILE *fou=fopen(configFile.c_str(),"w");
	if (!fou) return;
	fprintf(fou,":keyboard\n%d\n",keydefs.size());
	for (i=0; i<keydefs.size(); i++)
	{
		for (j=0; j<9; j++)
		{
			fprintf(fou,"%d ",keydefs[i][j]);
		}
		fprintf(fou,"%s\n",keyconfname[i].c_str());
	}
	for (i=0; i<8; i++) fprintf(fou,"%ld ",keydefselector[i]);
	fprintf(fou,"\n");
	fprintf(fou,"viewports:\n%d\n",NECKPOS_COUNT);
	for (i=0; i<NECKPOS_COUNT; i++)
	{
		fprintf(fou,"%f %f %f %f %f %d\n",
			neckpos[i].xdisp, neckpos[i].ydisp,
			neckpos[i].scale, neckpos[i].stretch,
			neckpos[i].skew, neckpos[i].statpos);
	}
	fclose(fou);
}

void default_config()
{
	int i;
	keydefs.resize(0); // make sure it's clear
	keydefs.resize(2);
	keyconfname.resize(0);
	keyconfname.push_back("Keyboard");
	keyconfname.push_back("Keyb#2");
	for (i=0; i<9; i++) 
	{
		keydefs[0].push_back(defkeys[i]);
		keydefs[1].push_back(defkey2[i]);
	}
	keydefselector[0]=1;
	keydefselector[1]=2;
	for (i=0; i<10; i++) neckpos[i]=defneckpos[i];
}

void init_config()
{
	int i;
#ifdef _WINDOWS
	configFile="fretscpp.ini";
	homeconfdir="";
	datadir="";
#else
	homeconfdir=getenv("HOME");
	homeconfdir+="/.config/fretscpp";
	system((string("mkdir -p ")+homeconfdir).c_str());
	configFile=homeconfdir+"/fretscpp.ini";
#endif
	if (fileExists(homeconfdir+"/data/keyboard.png")) datadir=homeconfdir+"/data";
	else if (fileExists("data/keyboard.png")) datadir="data";
	else if (fileExists("/usr/share/games/fretscpp/data")) datadir="/usr/share/games/fretscpp/data";
	else datadir="/usr/share/games/fretsonfire/data";
	default_config();
	if (read_config()) return;
	default_config();
}
